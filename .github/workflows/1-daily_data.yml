name: Daily Data Collection

on:
  schedule:
    - cron: '0 1 * * *'  # 06:30 IST daily
  workflow_dispatch:

jobs:
  collect-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create cache directory
      run: mkdir -p cache
        
    - name: Collect Market Data
      env:
        COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
        LOG_LEVEL: INFO
      run: |
        echo "📊 Starting Daily Data Collection..."
        echo "🔧 Checking environment..."
        if [ -z "$COINMARKETCAP_API_KEY" ]; then
          echo "❌ COINMARKETCAP_API_KEY is not set!"
          exit 1
        else
          echo "✅ API key is configured"
        fi
        echo "🚀 Running data fetcher..."
        python src/data_fetcher.py
        echo "✅ Data fetcher completed"

    - name: Verify datasets were updated
      run: |
        echo "🔍 Checking dataset files..."
        if [ -f "cache/cipherb_dataset.json" ] && [ -f "cache/sma_dataset.json" ]; then
          echo "✅ Dataset files exist"
          echo "📊 File sizes:"
          ls -lh cache/*.json
          echo "📅 File timestamps:"
          ls -lt cache/*.json
        else
          echo "❌ Dataset files missing!"
          exit 1
        fi

    - name: Commit and push datasets (conflict-safe)
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Pull latest changes first to avoid conflicts
        echo "🔄 Pulling latest changes..."
        git pull --rebase origin main || echo "No remote changes to pull"
        
        # Add and commit changes
        git add cache/*.json
        if git diff --staged --quiet; then
          echo "📭 No changes to commit (datasets unchanged)"
        else
          git commit -m "📊 Daily data update $(date '+%Y-%m-%d %H:%M')" || echo "Commit failed, continuing..."
          
          # Push with retry logic
          echo "🚀 Pushing changes..."
          for i in {1..3}; do
            if git push origin main; then
              echo "✅ Successfully pushed datasets"
              break
            else
              echo "⚠️ Push attempt $i failed, retrying in 5s..."
              sleep 5
              git pull --rebase origin main || echo "Rebase failed, continuing..."
            fi
            if [ $i -eq 3 ]; then
              echo "❌ All push attempts failed - manual intervention needed"
            fi
          done
        fi
